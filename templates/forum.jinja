{% extends 'base.jinja' %}
{% block content %}
<style>

    body {
        font-family: Arial, sans-serif;
    }
    body.light {
        background-color: white;
        color: black;
    }
    body.dark {
        background-color: rgb(32, 32, 32);
        color: rgb(224, 224, 224);
    }
    .post {

        margin-bottom: 20px;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        width: 40%; 
        margin: 20px auto; 
        position: relative;
    }

    body.light .post{
        border: 1px solid black;
    }

    body.dark .post{
        border: 1px solid white;
    }

    body.light .post h2 {
        margin-top: 0;
        color: #333;
    }
    body.dark .post h2 {
        margin-top: 0;
        color: rgb(165, 165, 165);
    }

    body.light .post p {
        color: #666;
    }
    body.dark .post p {
        color: rgb(155, 155, 155);
    }
    .post p:first-child {
        font-weight: bold;
    }
    .post-details {
        font-size: 0.8em;
        color: #999;
    }
    .badge {
        display: inline-block;
        padding: .25em .4em;
        font-size: 75%;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .75rem; 
        color: #fff;
        background-color: #007bff; 
    }
    .badge-purple {
        background-color: purple;
        color: white;
    }
    .badge-green {
        background-color: green;
        color: white;
    }
    .arrow-down {
        cursor: pointer;
        text-align: center;
    }
    .comments {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f9f9f9;
        margin-top: 10px;
    }
    .comments-header {
        font-weight: bold;
        color: #333;
        margin-bottom: 10px;
    }

    .post p:not(.comments-header):first-child {
        font-weight: normal;
        color: #666;
        
    }
    .delete-button {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: red;
        border: none;
        border-radius: 50%;
        color: white;
        padding: 5px 10px;
        cursor: pointer;
    }
    .edit-button {
        position: absolute;
        top: 10px;
        right: 50px;
        background-color: yellow;
        border: none;
        border-radius: 50%;
        color: black;
        padding: 5px 10px;
        cursor: pointer;
        }
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<h1 style="text-align: center;">Forum</h1>
{% for post in posts %}

{# <div class="post" onclick="toggleComments({{ post['id'] }})">
    {% if permissions == 'staff' %}
        <button style="float: left; margin-right: 10px;" onclick="event.stopPropagation(); deletePost({{ post['id'] }})">Delete Post</button>
    {% endif %}
</div> #}
<div class="post" onclick="toggleComments({{ post['id'] }})">
    <h2 id="title-{{ post['id'] }}">{{ post['title'] }} <span class="post-details">#{{ post['id'] }} | {{ post['user'] }}  <span class="receiver-permission" data-permission="{{ post['permissions'] }}">{{ post['permissions'] }}</span></span></h2>
    <p id="message-{{ post['id'] }}">{{ post['message'] }}</p>
    <div class="arrow-down" onclick="event.stopPropagation(); toggleComments({{ post['id'] }})">
        <p style="font-size: 0.8em; color: #999;">Click to expand</p>
        {# <p style="font-size: 0.8em; color: #999;">&#8595;</p> #}
    </div>
    {% if permissions == 'staff' %}
        <button class="delete-button" onclick="event.stopPropagation(); deletePost({{ post['id'] }})">X</button>
    {% endif %}

    {% if permissions == 'staff' or username == post['user']%}
        <button class="edit-button" onclick="event.stopPropagation(); editPost({{ post['id'] }})">Edit</button>
    {% endif %}

    <div id="comments-{{ post['id'] }}" class="comments" style="display: none;">
        <p class="comments-header">Comments</p>
        {% set messages = post['comments']|split_and_filter('âŒš') %}
    
    {% for comment in messages %}
        <p>{{ comment }}
        {% if permissions == 'staff' or username == post['user'] %}
            <button onclick="deleteComment({{ post['id'] }}, '{{ comment }}')">Delete</button>
        {% endif %}
        </p>
        
    {% endfor %}
    <form id="commentfrompost{{ post['id'] }}" onclick="event.stopPropagation();" onsubmit="event.preventDefault(); addComment({{ post['id'] }});">
        <textarea name="comment" placeholder="Add a comment..."></textarea>
        <input type="submit" value="Submit">
    </form>
    </div>

</div>
<style>
    #newpost {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: #f8f9fa;
        border-top: 1px solid #e9ecef;
        padding: 20px;
        box-sizing: border-box;
    }
    #newpost h2 {
        margin-top: 0;
    }
    #newpost label {
        font-weight: bold;
    }
    #newpost input[type="text"],
    #newpost textarea {
        width: 100%;
        padding: 10px;
        margin: 5px 0;
        box-sizing: border-box;
    }
    #newpost input[type="submit"] {
        background-color: #007bee;
        color: white;
        border: none;
        padding: 10px;
        cursor: pointer;
    }
    body.dark #newpost {
        background-color: #333;
        color: #f8f9fa;
    }

</style>

<div id="newpost">
    <h2>Create New Post</h2>
    <form onsubmit="event.preventDefault(); createNewPost();">
        <label for="title">Title:</label><br>
        <input type="text" id="title" name="title" placeholder="Title..."><br>
        <label for="message">Message:</label><br>
        <textarea id="message" name="message" placeholder="Enter your message..."></textarea><br>
        <input type="hidden" id="postId" name="postId" value="{{ next_post_id }}">
        <input type="hidden" id="username" name="username" value="{{ username }}">
        <input type="submit" value="Submit">
    </form>
</div>
{% endfor %}
<script>
const body = document.body;
const lightTheme = localStorage.getItem('theme')
    if (lightTheme){
        body.className = lightTheme;
    }

    let receiverPermissions = document.getElementsByClassName('receiver-permission');
    for(let i = 0; i < receiverPermissions.length; i++) {
        let permission = receiverPermissions[i].getAttribute('data-permission');
        if (['academics', 'administrative staff', 'admin user'].includes(permission)) {
            permission = 'staff';
        }
        receiverPermissions[i].textContent = permission;
        if (permission === 'staff') {
            receiverPermissions[i].className += ' badge badge-purple';
        } else if (permission === 'student') {
            receiverPermissions[i].className += ' badge badge-green';
        }
    }


    function toggleComments(postId) {
        var commentsDiv = document.getElementById('comments-' + postId);
        var arrow = document.getElementById('arrow-' + postId);
        if (commentsDiv.style.display === "none") {
            commentsDiv.style.display = "block";
            arrow.style.transform = "rotate(180deg)";
        } else {
            commentsDiv.style.display = "none";
            arrow.style.transform = "rotate(0deg)";
        }
    }
    function deleteComment(postId, comment) {
        axios.post('/delete_comment', {
            post_id: postId,
            comment: comment
        }).then(function (response) {
        }).catch(function (error) {
            console.log(error);
        });
    }
    function deletePost(postId) {
        axios.post('/delete_post', {
            post_id: postId,
        }).then(function (response) {
        }).catch(function (error) {
            console.log(error);
        });
    }
    function editPost(postId) {
        var title = document.getElementById('title-' + postId);
        var message = document.getElementById('message-' + postId);
        if (title.isContentEditable) {
            title.contentEditable = "false";
            message.contentEditable = "false";
            title.style.color = "black";
            message.style.color = "black";
            axios.post('/edit_post', {
                post_id: postId,
                title: title.textContent,
                message: message.textContent
            }).then(function (response) {
            }).catch(function (error) {
                console.log(error);
            });
        } else {
            title.contentEditable = "true";
            message.contentEditable = "true";
            title.style.color = "red";
            message.style.color = "red";
        }
    }
    function addComment(postId) {
        var commentForm = document.getElementById('commentfrompost' + postId);
        var comment = commentForm.comment.value;
        axios.post('/add_comment', {
            post_id: postId,
            comment: comment
        }).then(function (response) {
            console.log(response.data.message);
        }).catch(function (error) {
            console.log(error);
        });
    }
    function createNewPost() {
        var title = document.getElementById('title').value;
        var message = document.getElementById('message').value;
        var username = document.getElementById('username').value;
        console.log(username);
        console.log("title" + title + "message" + message);
        axios.post('/create_post', {
            title: title,
            message: message,
            username: username
        }).then(function (response) {
            console.log(response.data.message);
        }).catch(function (error) {
            console.log(error);
        });
    }
    </script>
    
{% endblock %}